.text {
  /*for general text rn*/
  color: white;
}

.termsAndCheckboxWrapper {
  /*wrapper div for the agreement checkbox and "I AGREE" text*/
  flex-direction: row;
}

.termsCheckboxAgreed {
  /*the little checkbox for terms agreement if checked*/
  height: 2vh;
  width: 2vh;
  border: 2px solid red;
  background: white;
}

.termsCheckboxNotAgree {
  /*the little checkbox for terms agreement if NOT checked*/
  height: 2vh;
  width: 2vh;
  border: 2px solid grey;
  background: transparent;
}

.checkboxDropdownWrapper {
  /*for the wrapper around the services needed checkbox dropdown*/
}

.selectedService {
  /*for selected services in CheckbocDropdown.js*/
}

.unselectedService {
  /*for unselected services in CheckbocDropdown.js*/
}

.selectDropdownWrapper {
  /*the wrapper around the launch timing options in SelectDropdown.js*/
  border: 1px solid grey;
}

.selectedOption {
  /*the currently selected launch timing option in SelectDropdown.js*/
  background: red;
}

.unselectedOption {
  /*the NOT selected launch timing options in SelectDropdown.js*/
}

.dropDownArrow {
  /*for the dropdown arrow inside SelectDropdown.js and CheckboxDropdown.js*/
  width: 30px;
  height: 30px;
  margin: 0;
  padding: 0;
  display: inline-block;
  background: grey;
}

.selectDropdownArrowUp {
  /*to control styling when SelectDropdown.js and CheckboxDropdown.js menu IS showing options
  I followed a tut on making an arrow as a placeholder, but it's not showing in the right spot, it's up on the upper left? so weird lol*/
  position: absolute;
  top: 10px;
  left: 8px;
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-bottom: 10px solid black;
}

.selectDropdownArrowDown {
  /*to control styling when SelectDropdown.js and CheckboxDropdown.js menu is NOT showing options*/
  position: absolute;
  top: 12px;
  left: 8px;
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-top: 10px solid black;
}

.fileUploadWrapper {
  /*for the div wrapping the words <p> and the fielUpload <div> field*/
  height: 100%;
  width: 100%;
  border: 1px solid grey;
}

.fileUploadInner {
  /*for the <p> that says "upload here"*/
}

.fileUploadField {
  /*for the drap and drop field itself*/
  height: 10vh;
  width: 100%;
  border: 1px solid red;
}

.uploadedFileList {
  /*for the uploaded list of file names that display in upload field*/
}

.textarea {
  /*for the actual <textarea> input field INSIDE TextBox.js.
  needs to have invisible border AND fill the entire div around it, allowing
  for the description text and char counter to be in a row above it*/
  height: 100%;
  width: 100%;
  border-style: hidden hidden outset hidden;
  background-color: black;
  color: white;
}

.textAreaWrapper {
  /*for the small wrapper div in TextBox.js*/
  border: 1px solid grey;
  flex-direction: row;
}

.charCounter {
  /*for the small xx/500 charcounter inside the TextBox.js*/
}

.textBoxInner {
  /*for the small wrapper to align the words and counter into a row above the actual text input field*/
  justify-content: space-between;
  color: white;
}

.closeButton {
  /*for close button on InputPage*/
  flex: 1;
}
.sideBySide-input-container {
  /*for divs that wrap side by side inputs (like inputs 1 & 2)*/
  flex-direction: row;
  flex: 1;
  justify-content: space-evenly;
  padding-top: 1%;
  padding-bottom: 1%;
}

.sideBySide-input {
  /*for the actual sideBySide inputs*/
  padding-left: 1%;
  padding-right: 1%;
  width: 25%;
  background-color: black;
  border-style: hidden hidden outset hidden;
  /* border-bottom: 3px solid white; */
}

.solo-input-container {
  /*for container around inputs that don't have sibling (like input 3)
  and that reach across the full width of the input form*/
  padding-top: 1%;
  padding-bottom: 1%;
  /* color: grey; */
}

.solo-input {
  /*for input lines that don't have sibling (like input 3*/
  width: 100%;
}

.closeButtonWrapper {
  /*the little div to help space the close button in InputPage.js*/
  flex: 1;
}

.inputPageContactInfo {
  /*<p> that holds the lines of contact info text, each in a separate <p>*/
  color: white;
}

.inputPageContactSpacer {
  /*empty spacer to help space contact info text*/
}

.inputPageSidewaysText {
  /*div that holds text to be rotated on input page*/
  /*rotating it moves it to the lower right if the  screen?*/
  /* transform: rotate(90deg); */
  color: white;
}

.input-page {
  /*wrapper for whole input page*/
  display: flex;
}

.input-form {
  /*for the <form> itself*/
  flex-direction: column;
  flex: 2;
  padding-right: 10vw;
}

.landing {
  display: flex;
  /* flex-direction: row; */
  flex-wrap: wrap;
  justify-content: space-evenly;
}

.intro-text {
  flex: 1;
}

.vertical-text {
  /*projectMERCURY text on LandingPage.js*/
  flex: 2;
  color: white;
  /* transform: rotate(90deg); */
}

.right-third {
  flex-direction: column;
  flex: 1;
  /* align-content: flex-start; */
}

.contact-text {
  flex: 1;
  margin-bottom: 1rem;
}

.address-text {
  flex: 1;
}

.inquire {
  flex: 1;
  color: black;
  background: white;
  margin-bottom: 10rem;
}

.App {
  /* text-align: center; */
  background-color: black;
}

/* .App-logo { */
/* animation: App-logo-spin infinite 20s linear; */
/* height: 40vmin; */
/* pointer-events: none; */
/* } */
/*  */
/* .App-header { */
/* background-color: #282c34; */
/* min-height: 100vh; */
/* display: flex; */
/* flex-direction: column; */
/* align-items: center; */
/* justify-content: center; */
/* font-size: calc(10px + 2vmin); */
/* color: white; */
/* } */
/*  */
/* .App-link { */
/* color: #61dafb; */
/* } */
/*  */
/* @keyframes App-logo-spin { */
/* from { */
/* transform: rotate(0deg); */
/* } */
/* to { */
/* transform: rotate(360deg); */
/* } */
/* } */
/*  */
